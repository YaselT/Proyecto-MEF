/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/** * @author anderson */
package mef.view;

import java.awt.Color;
import java.awt.Graphics;
import java.util.Observable;
import java.util.Observer;
import mef.controller.Controller;
import mef.model.Model;

public class View extends javax.swing.JFrame implements Observer {
    // System.out.println(  );
    
    // metodos para abrir ventanas, cerrarlas y obtener su informacion
    public void AbrirVentanaEstados (String title) {
        // ABDERSON buscar cm editar el tama√±o de la ventana
        VentanaEstados.setTitle(title);
        VentanaEstados.setBounds(0, 0, 441, 137);
        VentanaEstados.setVisible(true);
    }
    public void AbrirVentanaSimbolos () {
        Simbolos.setBounds(0, 0, 441, 137);
        Simbolos.setVisible(true);
    }
    
     public void AbrirVentanaHilera () {
        VenHilera.setBounds(0, 0, 441, 137);
        VenHilera.setVisible(true);
    }
     
    public void CerrarVentanaEstados ( ) {
        txtVentEstID.setText(null);
        txtVenSimb.setText(null);
        txtVentHilera.setText(null);
        Simbolos.setVisible(false);
        VentanaEstados.setVisible(false);
        VenHilera.setVisible(false);
    }
    
    public String getVentanaEstados () {
        return VentanaEstados.getTitle();
    }
    
    public String getTxtVentEstID () {
        return txtVentEstID.getText();
    } 
    
    public String getTxtVentHilera () {
        return txtVentHilera.getText();
    } 
    
    public String getTxtVenSimb () {
        return txtVenSimb.getText();
    } 
    
    public View() {
        initComponents();
        Simbolos.setModal(true);
        VentanaEstados.setModal(true);
        VenHilera.setModal(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VentanaEstados = new javax.swing.JDialog();
        txtVentEstID = new javax.swing.JTextField();
        lbVentEstlID = new javax.swing.JLabel();
        butVentEsttAceptar = new javax.swing.JButton();
        buttVentEstCancelar = new javax.swing.JButton();
        Simbolos = new javax.swing.JDialog();
        txtVenSimb = new javax.swing.JTextField();
        lblSimb = new javax.swing.JLabel();
        buttSimbAceptar = new javax.swing.JButton();
        buttSimbCancelar = new javax.swing.JButton();
        VenHilera = new javax.swing.JDialog();
        txtVentHilera = new javax.swing.JTextField();
        lblHilera = new javax.swing.JLabel();
        buttHileraAceptar = new javax.swing.JButton();
        buttHileraCancelar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        Archivo = new javax.swing.JMenu();
        Guardar = new javax.swing.JMenuItem();
        Recuperar = new javax.swing.JMenuItem();
        Limpiar = new javax.swing.JMenuItem();
        Estados = new javax.swing.JMenu();
        Inicial = new javax.swing.JMenuItem();
        Intermedio = new javax.swing.JMenuItem();
        Final = new javax.swing.JMenuItem();
        Verificar = new javax.swing.JMenu();
        Hilera = new javax.swing.JMenuItem();

        VentanaEstados.setBounds(new java.awt.Rectangle(0, 0, 405, 91));
        VentanaEstados.setName("VenEst"); // NOI18N

        lbVentEstlID.setText("ID");

        butVentEsttAceptar.setText("Aceptar");
        butVentEsttAceptar.setName("VenEstAceptar"); // NOI18N

        buttVentEstCancelar.setText("Cancelar");
        buttVentEstCancelar.setName(""); // NOI18N

        javax.swing.GroupLayout VentanaEstadosLayout = new javax.swing.GroupLayout(VentanaEstados.getContentPane());
        VentanaEstados.getContentPane().setLayout(VentanaEstadosLayout);
        VentanaEstadosLayout.setHorizontalGroup(
            VentanaEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaEstadosLayout.createSequentialGroup()
                .addGroup(VentanaEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VentanaEstadosLayout.createSequentialGroup()
                        .addGroup(VentanaEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VentanaEstadosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbVentEstlID))
                            .addGroup(VentanaEstadosLayout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(butVentEsttAceptar)
                                .addGap(31, 31, 31)
                                .addComponent(buttVentEstCancelar)))
                        .addGap(0, 104, Short.MAX_VALUE))
                    .addGroup(VentanaEstadosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtVentEstID)))
                .addContainerGap())
        );
        VentanaEstadosLayout.setVerticalGroup(
            VentanaEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VentanaEstadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbVentEstlID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVentEstID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VentanaEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butVentEsttAceptar)
                    .addComponent(buttVentEstCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Simbolos.setBounds(new java.awt.Rectangle(0, 0, 405, 91));
        Simbolos.setMinimumSize(new java.awt.Dimension(350, 91));

        lblSimb.setText("Simbolos");

        buttSimbAceptar.setText("Aceptar");
        buttSimbAceptar.setName("SimbAceptar"); // NOI18N

        buttSimbCancelar.setText("Cancelar");
        buttSimbCancelar.setName(""); // NOI18N

        javax.swing.GroupLayout SimbolosLayout = new javax.swing.GroupLayout(Simbolos.getContentPane());
        Simbolos.getContentPane().setLayout(SimbolosLayout);
        SimbolosLayout.setHorizontalGroup(
            SimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimbolosLayout.createSequentialGroup()
                .addGroup(SimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SimbolosLayout.createSequentialGroup()
                        .addGroup(SimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SimbolosLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblSimb))
                            .addGroup(SimbolosLayout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(buttSimbAceptar)
                                .addGap(31, 31, 31)
                                .addComponent(buttSimbCancelar)))
                        .addGap(0, 55, Short.MAX_VALUE))
                    .addGroup(SimbolosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtVenSimb)))
                .addContainerGap())
        );
        SimbolosLayout.setVerticalGroup(
            SimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimbolosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSimb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVenSimb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SimbolosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttSimbAceptar)
                    .addComponent(buttSimbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblHilera.setText("Hilera");

        buttHileraAceptar.setText("Aceptar");
        buttHileraAceptar.setName("buttHileraAceptar"); // NOI18N

        buttHileraCancelar.setText("Cancelar");
        buttHileraCancelar.setName(""); // NOI18N

        javax.swing.GroupLayout VenHileraLayout = new javax.swing.GroupLayout(VenHilera.getContentPane());
        VenHilera.getContentPane().setLayout(VenHileraLayout);
        VenHileraLayout.setHorizontalGroup(
            VenHileraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VenHileraLayout.createSequentialGroup()
                .addGroup(VenHileraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VenHileraLayout.createSequentialGroup()
                        .addGroup(VenHileraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(VenHileraLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblHilera))
                            .addGroup(VenHileraLayout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(buttHileraAceptar)
                                .addGap(31, 31, 31)
                                .addComponent(buttHileraCancelar)))
                        .addGap(0, 49, Short.MAX_VALUE))
                    .addGroup(VenHileraLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtVentHilera)))
                .addContainerGap())
        );
        VenHileraLayout.setVerticalGroup(
            VenHileraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VenHileraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHilera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVentHilera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VenHileraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttHileraAceptar)
                    .addComponent(buttHileraCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 100, 0, 0));

        Archivo.setText("Archivo");

        Guardar.setText("Guardar");
        Archivo.add(Guardar);

        Recuperar.setText("Recuperar");
        Archivo.add(Recuperar);

        Limpiar.setText("Limpiar");
        Archivo.add(Limpiar);

        jMenuBar1.add(Archivo);

        Estados.setText("Estado");

        Inicial.setText("Inicial");
        Estados.add(Inicial);

        Intermedio.setText("Intermedio");
        Estados.add(Intermedio);

        Final.setText("Final");
        Estados.add(Final);

        jMenuBar1.add(Estados);

        Verificar.setText("Verificar");

        Hilera.setText("Hilera");
        Verificar.add(Hilera);

        jMenuBar1.add(Verificar);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Archivo;
    private javax.swing.JMenu Estados;
    private javax.swing.JMenuItem Final;
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenuItem Hilera;
    private javax.swing.JMenuItem Inicial;
    private javax.swing.JMenuItem Intermedio;
    private javax.swing.JMenuItem Limpiar;
    private javax.swing.JMenuItem Recuperar;
    private javax.swing.JDialog Simbolos;
    private javax.swing.JDialog VenHilera;
    private javax.swing.JDialog VentanaEstados;
    private javax.swing.JMenu Verificar;
    public javax.swing.JButton butVentEsttAceptar;
    public javax.swing.JButton buttHileraAceptar;
    private javax.swing.JButton buttHileraCancelar;
    public javax.swing.JButton buttSimbAceptar;
    private javax.swing.JButton buttSimbCancelar;
    private javax.swing.JButton buttVentEstCancelar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lbVentEstlID;
    private javax.swing.JLabel lblHilera;
    private javax.swing.JLabel lblSimb;
    public javax.swing.JTextField txtVenSimb;
    public javax.swing.JTextField txtVentEstID;
    public javax.swing.JTextField txtVentHilera;
    // End of variables declaration//GEN-END:variables

    Model model;
    Controller controller;
    
   public void setModel (Model model) {
        this.model = model;
        model.addObserver(this);
    }
    
    public void setController ( Controller controller) {
        this.controller = controller;
        Limpiar.addActionListener(controller);
        Guardar.addActionListener(controller);
        Recuperar.addActionListener(controller);
        
        butVentEsttAceptar.addActionListener(controller);
        buttSimbAceptar.addActionListener(controller);
        buttHileraAceptar.addActionListener(controller);
        
        buttVentEstCancelar.addActionListener(controller);
        buttSimbCancelar.addActionListener(controller);
        buttHileraCancelar.addActionListener(controller);
        
        Hilera.addActionListener(controller);
        Final.addActionListener(controller);
        Inicial.addActionListener(controller);
        Intermedio.addActionListener(controller);
        this.addMouseMotionListener(controller);
        this.addMouseListener(controller);
    }
    
    // no se si debe ir aqui o en el model, depor si no le cambia nada al model solo es de consulta
    // es para tener el centro entre las lineas dibujadas y no lo hice en paint() para no se haga mas largo el codigo
    public int colocarString (int a, int b) {
        if (a>b)
            return a-(a-b)/2;
        return b-(b-a)/2;
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (Model.interruptor) {
            g.setColor(Color.green);   g.drawLine(Model.x1, Model.y1, Model.x2, Model.y2); }
        for( int j=0; j<model.getTrans().size() ; j++ ) {
            g.setColor(Color.blue);
            if (!model.getTrans().get(j).Comparar()) {
                g.drawString("‚Ä¢", j, j);
                
                g.drawLine(model.getTrans().get(j).getEntrada().getCoordenadaX()+20,
                        model.getTrans().get(j).getEntrada().getCoordenadaY()+20, 
                        model.getTrans().get(j).getSalida().getCoordenadaX()+20,
                        model.getTrans().get(j).getSalida().getCoordenadaY()+20);
                g.drawString(model.getTrans().get(j).getUnion() , 
                        colocarString( model.getTrans().get(j).getEntrada().getCoordenadaX(), model.getTrans().get(j).getSalida().getCoordenadaX() ) ,
                        colocarString( model.getTrans().get(j).getEntrada().getCoordenadaY(), model.getTrans().get(j).getSalida().getCoordenadaY())     );
               
                g.drawString("‚Ä¢", model.getTrans().get(j).getEntrada().getCoordenadaX(),
                        model.getTrans().get(j).getEntrada().getCoordenadaY());
            }
            else {
                g.drawRect(model.getTrans().get(j).getEntrada().getCoordenadaX()+20,
                        model.getTrans().get(j).getEntrada().getCoordenadaY()-10, 30, 30);
                g.drawString(model.getTrans().get(j).getUnion() , model.getTrans().get(j).getEntrada().getCoordenadaX(),
                        model.getTrans().get(j).getEntrada().getCoordenadaY()-10);
                g.drawString("‚Ä¢", model.getTrans().get(j).getEntrada().getCoordenadaX()+17,
                        model.getTrans().get(j).getEntrada().getCoordenadaY()+3);
            }
        }
        
        for(int i=0; i<model.getCamino().size(); i++)   {
            switch (model.getCamino().get(i).getEstado()) {
                case 0:
                    g.setColor(Color.blue);
                    break;
                case 1:
                    g.setColor(Color.green);
                    break;
                default:
                    g.setColor(Color.red);
                    break;
            }
            int x = model.getCamino().get(i).getCoordenadaX(); 
            int y = model.getCamino().get(i).getCoordenadaY();
            g.drawOval(x, y, 40, 40);  g.fillOval(x, y, 40, 40);// crea el circulo y lo rellena
            g.setColor(Color.white); g.drawString(model.getCamino().get(i).getID(), x+5,y+22);
        }
        
    }
    
    @Override
    public void update(Observable o, Object arg) {
        this.repaint();
    }

}

